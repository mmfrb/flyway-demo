buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.9.5"
    }
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'docker-compose'

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation("com.google.guava:guava:28.0-jre")

    // To access database.
    implementation("org.jdbi:jdbi3-postgres:3.10.1")
    implementation("org.postgresql:postgresql:42.2.8")

    // Get app properties.
    implementation("com.typesafe:config:1.3.4")

    // Use JUnit test framework
    testImplementation("junit:junit:4.12")
}

application {
    // Define the main class for the application
    mainClassName = "flyway.demo.App"
}

dockerCompose.isRequiredBy(test)

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed", "standardOut"
        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        afterSuite { desc, result ->
            if (!desc.parent) {
                def output = "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
                def startItem = '|  ', endItem = '  |'
                def repeatLength = startItem.length() + output.length() + endItem.length()
                println('\n' + ('-' * repeatLength) + '\n' + startItem + output + endItem + '\n' + ('-' * repeatLength))
            }
        }
    }
}

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}
